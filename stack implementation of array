#include <stdio.h>
#include <stdlib.h>
#define MAX 100 

typedef struct {
    int data[MAX];
    int top;
} Stack;

void initStack(Stack* s) {
    s->top = -1;
}

int isEmpty(Stack* s) {
    return s->top == -1;
}

int isFull(Stack* s) {
    return s->top == MAX - 1;
}

void push(Stack* s, int value) {
    if (isFull(s)) {
        printf("Stack Overflow! Cannot push %d onto the stack.\n", value);
        return;
    }
    s->data[++s->top] = value;
    printf("%d pushed onto the stack.\n", value);
}

int pop(Stack* s) {
    if (isEmpty(s)) {
        printf("Stack Underflow! Cannot pop from the stack.\n");
        return -1; 
    }
    return s->data[s->top--];
}

int peek(Stack* s) {
    if (isEmpty(s)) {
        printf("Stack is empty! Cannot peek.\n");
        return -1; 
    }
    return s->data[s->top];
}

int main() {
    Stack s;
    initStack(&s);

    push(&s, 10);
    push(&s, 20);
    push(&s, 30);

    printf("Top element is: %d\n", peek(&s));

    printf("Popped element is: %d\n", pop(&s));
    printf("Popped element is: %d\n", pop(&s));

    if (isEmpty(&s)) {
        printf("Stack is empty.\n");
    } else {
        printf("Stack is not empty.\n");
    }

    return 0;
}
